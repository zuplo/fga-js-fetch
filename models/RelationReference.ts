/* tslint:disable */
/* eslint-disable */
/**
 * OpenFGA
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@openfga.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * RelationReference represents a relation of a particular object type (e.g. 'document#viewer').
 * @export
 * @interface RelationReference
 */
export interface RelationReference {
    /**
     * 
     * @type {string}
     * @memberof RelationReference
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof RelationReference
     */
    relation?: string;
    /**
     * 
     * @type {object}
     * @memberof RelationReference
     */
    wildcard?: object;
    /**
     * The name of a condition that is enforced over the allowed relation.
     * @type {string}
     * @memberof RelationReference
     */
    condition?: string;
}

/**
 * Check if a given object implements the RelationReference interface.
 */
export function instanceOfRelationReference(value: object): boolean {
    if (!('type' in value)) return false;
    return true;
}

export function RelationReferenceFromJSON(json: any): RelationReference {
    return RelationReferenceFromJSONTyped(json, false);
}

export function RelationReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelationReference {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'relation': json['relation'] == null ? undefined : json['relation'],
        'wildcard': json['wildcard'] == null ? undefined : json['wildcard'],
        'condition': json['condition'] == null ? undefined : json['condition'],
    };
}

export function RelationReferenceToJSON(value?: RelationReference | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'relation': value['relation'],
        'wildcard': value['wildcard'],
        'condition': value['condition'],
    };
}

