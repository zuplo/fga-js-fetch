/* tslint:disable */
/* eslint-disable */
/**
 * OpenFGA
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@openfga.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TupleChange } from './TupleChange';
import {
    TupleChangeFromJSON,
    TupleChangeFromJSONTyped,
    TupleChangeToJSON,
} from './TupleChange';

/**
 * 
 * @export
 * @interface ReadChangesResponse
 */
export interface ReadChangesResponse {
    /**
     * 
     * @type {Array<TupleChange>}
     * @memberof ReadChangesResponse
     */
    changes: Array<TupleChange>;
    /**
     * The continuation token will be identical if there are no new changes.
     * @type {string}
     * @memberof ReadChangesResponse
     */
    continuationToken?: string;
}

/**
 * Check if a given object implements the ReadChangesResponse interface.
 */
export function instanceOfReadChangesResponse(value: object): boolean {
    if (!('changes' in value)) return false;
    return true;
}

export function ReadChangesResponseFromJSON(json: any): ReadChangesResponse {
    return ReadChangesResponseFromJSONTyped(json, false);
}

export function ReadChangesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadChangesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'changes': ((json['changes'] as Array<any>).map(TupleChangeFromJSON)),
        'continuationToken': json['continuation_token'] == null ? undefined : json['continuation_token'],
    };
}

export function ReadChangesResponseToJSON(value?: ReadChangesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'changes': ((value['changes'] as Array<any>).map(TupleChangeToJSON)),
        'continuation_token': value['continuationToken'],
    };
}

