/* tslint:disable */
/* eslint-disable */
/**
 * OpenFGA
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: community@openfga.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RelationshipCondition
 */
export interface RelationshipCondition {
    /**
     * A reference (by name) of the relationship condition defined in the authorization model.
     * @type {string}
     * @memberof RelationshipCondition
     */
    name: string;
    /**
     * Additional context/data to persist along with the condition.
     * The keys must match the parameters defined by the condition, and the value types must
     * match the parameter type definitions.
     * @type {object}
     * @memberof RelationshipCondition
     */
    context?: object;
}

/**
 * Check if a given object implements the RelationshipCondition interface.
 */
export function instanceOfRelationshipCondition(value: object): boolean {
    if (!('name' in value)) return false;
    return true;
}

export function RelationshipConditionFromJSON(json: any): RelationshipCondition {
    return RelationshipConditionFromJSONTyped(json, false);
}

export function RelationshipConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelationshipCondition {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'context': json['context'] == null ? undefined : json['context'],
    };
}

export function RelationshipConditionToJSON(value?: RelationshipCondition | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'context': value['context'],
    };
}

